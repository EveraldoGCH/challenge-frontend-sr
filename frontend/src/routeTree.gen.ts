/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardLayoutRouteImport } from './routes/dashboard/layout'
import { Route as PageRouteImport } from './routes/page'
import { Route as LoginPageRouteImport } from './routes/login/page'
import { Route as DashboardPageRouteImport } from './routes/dashboard/page'

const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const PageRoute = PageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginPageRoute = LoginPageRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardPageRoute = DashboardPageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof PageRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/dashboard/': typeof DashboardPageRoute
  '/login': typeof LoginPageRoute
}
export interface FileRoutesByTo {
  '/': typeof PageRoute
  '/dashboard': typeof DashboardPageRoute
  '/login': typeof LoginPageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof PageRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/dashboard/': typeof DashboardPageRoute
  '/login/': typeof LoginPageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/dashboard/' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/login'
  id: '__root__' | '/' | '/dashboard' | '/dashboard/' | '/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  LoginPageRoute: typeof LoginPageRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardPageRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
  }
}

interface DashboardLayoutRouteChildren {
  DashboardPageRoute: typeof DashboardPageRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardPageRoute: DashboardPageRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren
)

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  LoginPageRoute: LoginPageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
